package twentyfive

fun fractalArtInput(): List<String> {
    return listOf(
            "../.. => .##/##./.#.",
            "#./.. => .#./#.#/##.",
            "##/.. => #.#/#.#/###",
            ".#/#. => #../.#./.#.",
            "##/#. => ##./#.#/..#",
            "##/## => #.#/#.#/...",
            ".../.../... => ..##/##../##../#.#.",
            "#../.../... => ##.#/..#./#.#./.#..",
            ".#./.../... => ..#./##.#/#.##/###.",
            "##./.../... => ###./##.#/.###/#.#.",
            "#.#/.../... => ##../#..#/.###/#.#.",
            "###/.../... => ...#/#..#/...#/...#",
            ".#./#../... => ...#/.##./#.##/..#.",
            "##./#../... => .##./.#../.##./.#..",
            "..#/#../... => ####/.#../#.#./.###",
            "#.#/#../... => ###./.#../##../....",
            ".##/#../... => ##../#.#./#.#./##..",
            "###/#../... => #.##/#..#/.#../##..",
            ".../.#./... => .#.#/.###/.##./##..",
            "#../.#./... => .###/.##./..##/..##",
            ".#./.#./... => .##./.#.#/#.##/.###",
            "##./.#./... => ..#./..../..#./###.",
            "#.#/.#./... => ..../..#./..##/##..",
            "###/.#./... => .#.#/#..#/.###/#..#",
            ".#./##./... => ..../..#./.#../####",
            "##./##./... => ..##/#.##/..#./#.##",
            "..#/##./... => ..../#.##/.##./####",
            "#.#/##./... => ..##/#.#./.#../.##.",
            ".##/##./... => #.../...#/###./....",
            "###/##./... => .#../#.#./#.##/....",
            ".../#.#/... => #.#./####/#.../..#.",
            "#../#.#/... => ...#/.#.#/###./.#.#",
            ".#./#.#/... => #..#/#.../###./#.##",
            "##./#.#/... => .##./#.../...#/#.##",
            "#.#/#.#/... => #..#/##../##../.#..",
            "###/#.#/... => #.#./...#/.#.#/.##.",
            ".../###/... => .#.#/.##./..#./.#..",
            "#../###/... => .###/..##/#.##/.#..",
            ".#./###/... => #.../#.../.#../#...",
            "##./###/... => .###/...#/.#.#/.#..",
            "#.#/###/... => .#../..##/#..#/#...",
            "###/###/... => .###/##../##.#/#.#.",
            "..#/.../#.. => ##.#/..../...#/..##",
            "#.#/.../#.. => .#.#/###./...#/.#.#",
            ".##/.../#.. => ##.#/.#../####/#.##",
            "###/.../#.. => #.../#..#/###./....",
            ".##/#../#.. => #..#/..#./####/...#",
            "###/#../#.. => ####/###./##.#/....",
            "..#/.#./#.. => .##./.##./##../#..#",
            "#.#/.#./#.. => #..#/#..#/#.../.#..",
            ".##/.#./#.. => ##../##.#/#.##/..##",
            "###/.#./#.. => #.##/..##/.##./#.#.",
            ".##/##./#.. => #.##/..../##../....",
            "###/##./#.. => ###./.#.#/.###/.#..",
            "#../..#/#.. => .###/#.##/..#./.##.",
            ".#./..#/#.. => #..#/..##/.#.#/##..",
            "##./..#/#.. => ###./#.../..##/##..",
            "#.#/..#/#.. => #.../.##./.###/###.",
            ".##/..#/#.. => ...#/##.#/..#./...#",
            "###/..#/#.. => ###./..#./.#../...#",
            "#../#.#/#.. => #..#/...#/..#./.#.#",
            ".#./#.#/#.. => #..#/##.#/####/.##.",
            "##./#.#/#.. => .###/##../..../.#..",
            "..#/#.#/#.. => ..#./##.#/####/###.",
            "#.#/#.#/#.. => #.#./#.##/##.#/.###",
            ".##/#.#/#.. => ..#./####/##../.###",
            "###/#.#/#.. => .#.#/###./.#.#/#...",
            "#../.##/#.. => .###/..##/.#.#/..#.",
            ".#./.##/#.. => #.##/.#../.###/#.#.",
            "##./.##/#.. => .###/#.../#.../..#.",
            "#.#/.##/#.. => ##../...#/..#./...#",
            ".##/.##/#.. => ..##/.#.#/...#/####",
            "###/.##/#.. => ##../.###/##../###.",
            "#../###/#.. => ###./#..#/#.#./....",
            ".#./###/#.. => ..../#.#./.###/.###",
            "##./###/#.. => .###/##../#..#/####",
            "..#/###/#.. => ..../#.#./#..#/##..",
            "#.#/###/#.. => .#.#/..##/##.#/#..#",
            ".##/###/#.. => .#../...#/##../.#..",
            "###/###/#.. => #.../.###/###./##.#",
            ".#./#.#/.#. => .#.#/#.##/###./#...",
            "##./#.#/.#. => .#../.#../.#../.#..",
            "#.#/#.#/.#. => ##.#/..../###./.#..",
            "###/#.#/.#. => #.#./##.#/.#.#/##..",
            ".#./###/.#. => ##.#/..#./..#./#.#.",
            "##./###/.#. => ####/.###/.#.#/.##.",
            "#.#/###/.#. => .#../.###/##../#.#.",
            "###/###/.#. => #.../.##./..##/####",
            "#.#/..#/##. => ..../..#./##../...#",
            "###/..#/##. => .###/..#./#.##/###.",
            ".##/#.#/##. => .###/..../#.#./...#",
            "###/#.#/##. => ###./...#/.###/####",
            "#.#/.##/##. => #.##/#.../..../...#",
            "###/.##/##. => #.../#.../#..#/...#",
            ".##/###/##. => .#../###./.###/..#.",
            "###/###/##. => ##.#/.#../###./.#..",
            "#.#/.../#.# => #.#./#.#./..../...#",
            "###/.../#.# => ####/###./..../##.#",
            "###/#../#.# => .###/##.#/#.##/..#.",
            "#.#/.#./#.# => ###./.###/#.##/....",
            "###/.#./#.# => .##./###./#.#./##..",
            "###/##./#.# => #.../.#.#/#.##/#..#",
            "#.#/#.#/#.# => ..#./#.#./##../..##",
            "###/#.#/#.# => ..#./.#../...#/.##.",
            "#.#/###/#.# => ..#./###./##.#/####",
            "###/###/#.# => #.../#.#./#..#/.#.#",
            "###/#.#/### => ..##/.##./.#.#/#...",
            "###/###/### => .##./..##/####/###."
    )
}
